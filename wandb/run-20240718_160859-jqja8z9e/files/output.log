Some weights of the model checkpoint at google/vit-base-patch16-224 were not used when initializing ViTModel: ['classifier.weight', 'classifier.bias']
- This IS expected if you are initializing ViTModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).
- This IS NOT expected if you are initializing ViTModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).
Some weights of ViTModel were not initialized from the model checkpoint at google/vit-base-patch16-224 and are newly initialized: ['vit.pooler.dense.weight', 'vit.pooler.dense.bias']
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Epoch 1/50:   0%|                                                                                                                                                                                     | 0/188 [00:00<?, ?it/s]
[9] > [33;01m/home/yunkwan/project/radarclip/distillation.py[00m([36;01m350[00m)forward()
-> features = outputs.last_hidden_state.mean(dim=1)
BaseModelOutputWithPooling(last_hidden_state=tensor([[[ 0.8600, -1.4076,  1.1151,  ...,  0.6111, -0.5720,  0.0492],
         [-0.4715, -0.5762,  1.3562,  ...,  1.6049, -0.7147, -0.7709],
         [-0.7122, -0.9650,  1.1448,  ...,  1.8001, -0.6660, -0.7381],
         ...,
         [ 0.3217, -0.2374,  0.0955,  ...,  0.7906, -0.8856, -0.2927],
         [ 0.1458, -0.6564,  0.6830,  ...,  0.4323, -0.8692, -0.7297],
         [ 0.0588, -0.4143,  0.1378,  ...,  0.6631, -0.0705, -0.6657]],

        [[ 0.2519, -1.3488,  0.6208,  ...,  1.2332, -0.4024,  0.3327],
         [ 0.2232, -0.6461, -0.1771,  ...,  1.3810, -0.3631, -0.8278],
         [-0.0284, -1.1442,  0.2598,  ...,  0.8714, -0.3246, -0.5883],
         ...,
         [-0.2353, -0.1646, -0.7749,  ...,  0.7006, -0.3700, -0.1231],
         [-0.0596, -0.3839, -0.9430,  ...,  0.6975,  0.1377, -0.2171],
         [-0.0048, -0.4130, -0.1234,  ...,  0.8275,  0.2237, -0.2362]],

        [[ 0.0615, -1.2028,  0.8204,  ...,  1.0248, -0.5509,  0.3137],
         [ 0.0706, -0.8218,  1.7499,  ...,  1.9756, -0.0347, -0.3877],
         [-0.7037, -1.3033,  1.2508,  ...,  1.9459,  0.0153, -0.9273],
         ...,
         [ 0.0787, -0.2283,  0.0334,  ...,  0.0696, -0.1220, -0.1833],
         [-0.3473, -0.8893,  0.1388,  ...,  0.9865, -0.0832, -0.9759],
         [ 0.0774, -0.5393,  0.4351,  ...,  0.7941,  0.2162, -0.3571]],

        ...,

        [[ 0.0362, -1.1291,  0.9028,  ...,  1.7801, -0.8775,  0.6049],
         [ 0.1532, -0.9508,  1.1259,  ...,  2.0245, -0.5598, -0.2157],
         [-0.1648, -1.0425,  0.9619,  ...,  1.7713, -0.5225, -0.5012],
         ...,
         [ 0.5396, -1.0614,  0.3589,  ...,  1.3295, -0.6921, -0.0989],
         [ 0.4854, -0.2815,  0.2452,  ...,  0.7347, -0.8078,  0.0960],
         [ 0.1083, -0.7113,  0.0467,  ...,  0.7511, -0.2369, -0.1663]],

        [[ 0.3644, -1.2466,  0.3554,  ...,  1.7377, -0.4927,  0.3647],
         [ 0.4882, -0.9003,  0.4685,  ...,  2.4113, -0.3093, -0.5393],
         [ 0.3365, -1.0143,  0.4977,  ...,  1.5701,  0.1526, -0.4559],
         ...,
         [-0.2342, -0.2433, -0.5437,  ...,  1.2275, -0.7837, -0.1627],
         [-0.5853, -0.1034, -0.4501,  ...,  1.8851, -0.2864, -0.3157],
         [ 0.1145, -0.3704,  0.0091,  ...,  1.0145, -0.1152, -0.3608]],

        [[-0.0080, -1.5762,  1.3683,  ...,  1.4329, -0.9128,  0.0112],
         [ 1.0674, -1.6122,  1.3230,  ...,  1.3272, -0.3656, -0.9705],
         [ 0.0456, -1.7907,  1.3240,  ...,  1.1822, -0.2561, -0.9994],
         ...,
         [ 0.3590, -0.8423,  0.7372,  ...,  1.1055, -0.6173, -0.6229],
         [ 0.3490, -0.7227,  0.7427,  ...,  1.2050, -0.4963, -0.5738],
         [ 0.3585, -0.2801,  0.2810,  ...,  1.0712, -0.2612, -0.3127]]],
       device='cuda:0'), pooler_output=tensor([[ 0.7896,  0.1021, -0.1130,  ..., -0.4122,  0.3467,  0.1633],
        [ 0.8079,  0.1991, -0.1844,  ..., -0.2298,  0.3990,  0.1111],
        [ 0.6191,  0.1760,  0.0682,  ..., -0.6886,  0.5675,  0.0573],
        ...,
        [ 0.4971,  0.0575,  0.2986,  ..., -0.3053,  0.7133, -0.2065],
        [ 0.5315,  0.3053,  0.5027,  ..., -0.4807,  0.3971, -0.3159],
        [ 0.3395, -0.0128,  0.3281,  ..., -0.0650,  0.2553,  0.1435]],
       device='cuda:0'), hidden_states=None, attentions=None)
tensor([[[ 0.8600, -1.4076,  1.1151,  ...,  0.6111, -0.5720,  0.0492],
         [-0.4715, -0.5762,  1.3562,  ...,  1.6049, -0.7147, -0.7709],
         [-0.7122, -0.9650,  1.1448,  ...,  1.8001, -0.6660, -0.7381],
         ...,
         [ 0.3217, -0.2374,  0.0955,  ...,  0.7906, -0.8856, -0.2927],
         [ 0.1458, -0.6564,  0.6830,  ...,  0.4323, -0.8692, -0.7297],
         [ 0.0588, -0.4143,  0.1378,  ...,  0.6631, -0.0705, -0.6657]],

        [[ 0.2519, -1.3488,  0.6208,  ...,  1.2332, -0.4024,  0.3327],
         [ 0.2232, -0.6461, -0.1771,  ...,  1.3810, -0.3631, -0.8278],
         [-0.0284, -1.1442,  0.2598,  ...,  0.8714, -0.3246, -0.5883],
         ...,
         [-0.2353, -0.1646, -0.7749,  ...,  0.7006, -0.3700, -0.1231],
         [-0.0596, -0.3839, -0.9430,  ...,  0.6975,  0.1377, -0.2171],
         [-0.0048, -0.4130, -0.1234,  ...,  0.8275,  0.2237, -0.2362]],

        [[ 0.0615, -1.2028,  0.8204,  ...,  1.0248, -0.5509,  0.3137],
         [ 0.0706, -0.8218,  1.7499,  ...,  1.9756, -0.0347, -0.3877],
         [-0.7037, -1.3033,  1.2508,  ...,  1.9459,  0.0153, -0.9273],
         ...,
         [ 0.0787, -0.2283,  0.0334,  ...,  0.0696, -0.1220, -0.1833],
         [-0.3473, -0.8893,  0.1388,  ...,  0.9865, -0.0832, -0.9759],
         [ 0.0774, -0.5393,  0.4351,  ...,  0.7941,  0.2162, -0.3571]],

        ...,

        [[ 0.0362, -1.1291,  0.9028,  ...,  1.7801, -0.8775,  0.6049],
         [ 0.1532, -0.9508,  1.1259,  ...,  2.0245, -0.5598, -0.2157],
         [-0.1648, -1.0425,  0.9619,  ...,  1.7713, -0.5225, -0.5012],
         ...,
         [ 0.5396, -1.0614,  0.3589,  ...,  1.3295, -0.6921, -0.0989],
         [ 0.4854, -0.2815,  0.2452,  ...,  0.7347, -0.8078,  0.0960],
         [ 0.1083, -0.7113,  0.0467,  ...,  0.7511, -0.2369, -0.1663]],

        [[ 0.3644, -1.2466,  0.3554,  ...,  1.7377, -0.4927,  0.3647],
         [ 0.4882, -0.9003,  0.4685,  ...,  2.4113, -0.3093, -0.5393],
         [ 0.3365, -1.0143,  0.4977,  ...,  1.5701,  0.1526, -0.4559],
         ...,
         [-0.2342, -0.2433, -0.5437,  ...,  1.2275, -0.7837, -0.1627],
         [-0.5853, -0.1034, -0.4501,  ...,  1.8851, -0.2864, -0.3157],
         [ 0.1145, -0.3704,  0.0091,  ...,  1.0145, -0.1152, -0.3608]],

        [[-0.0080, -1.5762,  1.3683,  ...,  1.4329, -0.9128,  0.0112],
         [ 1.0674, -1.6122,  1.3230,  ...,  1.3272, -0.3656, -0.9705],
         [ 0.0456, -1.7907,  1.3240,  ...,  1.1822, -0.2561, -0.9994],
         ...,
         [ 0.3590, -0.8423,  0.7372,  ...,  1.1055, -0.6173, -0.6229],
         [ 0.3490, -0.7227,  0.7427,  ...,  1.2050, -0.4963, -0.5738],
         [ 0.3585, -0.2801,  0.2810,  ...,  1.0712, -0.2612, -0.3127]]],
       device='cuda:0')
<built-in method mean of Tensor object at 0x74c47e473e00>
tensor([[ 0.2306, -0.7480,  1.0000,  ...,  0.8996, -0.5194, -0.4823],
        [ 0.3102, -0.7367,  0.4391,  ...,  0.9671, -0.3273, -0.3266],
        [-0.0288, -0.7131,  0.8116,  ...,  1.1868, -0.1732, -0.7031],
        ...,
        [ 0.0384, -0.7632,  0.8170,  ...,  1.4328, -0.6196, -0.2045],
        [ 0.4267, -0.8093,  0.4700,  ...,  1.6657, -0.3953, -0.3464],
        [ 0.2946, -1.1410,  0.8994,  ...,  1.2065, -0.4890, -0.5411]],
       device='cuda:0')
torch.Size([32, 768])
