Some weights of SmallCap were not initialized from the model checkpoint at Yova/SmallCap7M and are newly initialized: ['encoder_radar.layer3.12.bn1.weight', 'encoder_radar.layer3.15.conv1.weight', 'encoder_radar.layer3.21.bn1.bias', 'encoder_radar.layer2.3.bn3.bias', 'encoder_radar.layer1.1.bn1.running_var', 'encoder_radar.layer2.1.bn3.running_var', 'encoder_radar.layer3.13.bn2.running_mean', 'encoder_radar.layer4.2.bn2.num_batches_tracked', 'encoder_radar.layer3.12.conv2.weight', 'encoder_radar.layer3.0.bn1.bias', 'encoder_radar.layer3.2.bn2.weight', 'encoder_radar.layer3.2.bn2.bias', 'encoder_radar.layer1.1.conv1.weight', 'encoder_radar.layer3.3.bn1.num_batches_tracked', 'encoder_radar.layer3.3.bn1.running_mean', 'encoder_radar.layer2.3.bn3.running_mean', 'encoder_radar.layer3.11.bn3.running_var', 'encoder_radar.layer3.4.bn2.bias', 'encoder_radar.layer2.2.bn2.weight', 'encoder_radar.layer2.1.bn3.running_mean', 'encoder_radar.layer3.2.bn1.weight', 'encoder_radar.layer2.3.bn1.running_mean', 'encoder_radar.layer3.20.bn1.running_var', 'encoder_radar.layer3.17.bn2.running_var', 'encoder_radar.layer3.8.bn1.weight', 'encoder_radar.layer2.0.bn3.running_mean', 'encoder_radar.layer3.11.bn2.running_var', 'encoder_radar.layer4.2.bn3.weight', 'encoder_radar.layer3.14.bn2.num_batches_tracked', 'encoder_radar.layer4.0.downsample.1.bias', 'encoder_radar.layer3.18.bn2.num_batches_tracked', 'encoder_radar.layer3.2.bn3.bias', 'encoder_radar.layer3.6.conv2.weight', 'encoder_radar.layer3.6.bn3.weight', 'encoder_radar.layer3.7.bn3.weight', 'encoder_radar.layer3.11.bn1.bias', 'encoder_radar.layer3.1.bn2.bias', 'encoder_radar.layer2.0.conv1.weight', 'encoder_radar.layer3.10.bn1.weight', 'encoder_radar.layer3.5.bn2.num_batches_tracked', 'encoder_radar.layer3.8.conv3.weight', 'encoder_radar.layer2.1.bn1.running_var', 'encoder_radar.layer3.15.conv3.weight', 'encoder_radar.layer3.11.bn1.running_var', 'encoder_radar.layer3.17.bn3.bias', 'encoder_radar.layer2.0.conv3.weight', 'encoder_radar.layer3.1.conv2.weight', 'encoder_radar.layer3.12.bn2.weight', 'encoder_radar.layer3.2.conv2.weight', 'encoder_radar.layer3.19.bn1.running_var', 'encoder_radar.layer3.5.bn3.running_var', 'encoder_radar.layer3.20.conv1.weight', 'encoder_radar.layer4.2.conv3.weight', 'encoder_radar.layer3.8.bn2.bias', 'encoder_radar.layer3.20.bn2.running_var', 'encoder_radar.layer1.1.conv3.weight', 'encoder_radar.layer3.0.bn2.weight', 'encoder_radar.layer3.0.bn3.running_mean', 'encoder_radar.layer3.2.bn3.running_mean', 'encoder_radar.layer3.10.bn1.running_mean', 'encoder_radar.layer3.19.bn2.running_mean', 'encoder_radar.layer1.1.bn2.running_mean', 'encoder_radar.layer3.22.bn3.running_mean', 'encoder_radar.layer3.11.bn3.running_mean', 'encoder_radar.layer4.1.bn1.bias', 'encoder_radar.layer3.0.bn2.num_batches_tracked', 'encoder_radar.layer1.1.bn3.running_mean', 'encoder_radar.layer3.13.conv2.weight', 'encoder_radar.layer3.11.bn3.weight', 'encoder_radar.layer2.0.bn1.running_var', 'encoder_radar.layer3.2.bn3.running_var', 'encoder_radar.layer4.0.bn3.running_var', 'encoder_radar.layer3.6.bn3.num_batches_tracked', 'encoder_radar.layer1.2.bn2.num_batches_tracked', 'encoder_radar.layer3.22.bn2.num_batches_tracked', 'encoder_radar.layer4.0.downsample.1.num_batches_tracked', 'encoder_radar.layer3.9.bn2.num_batches_tracked', 'encoder_radar.layer3.6.bn3.running_var', 'encoder_radar.layer3.19.conv2.weight', 'encoder_radar.layer3.16.conv1.weight', 'encoder_radar.layer3.17.conv2.weight', 'encoder_radar.layer3.7.bn1.running_var', 'encoder_radar.layer3.15.bn3.weight', 'encoder_radar.layer3.14.bn1.num_batches_tracked', 'encoder_radar.layer3.16.bn1.running_mean', 'encoder_radar.layer4.0.conv1.weight', 'encoder_radar.layer3.0.bn1.num_batches_tracked', 'encoder_radar.layer3.0.downsample.1.bias', 'encoder_radar.layer4.0.bn3.weight', 'encoder_radar.layer3.11.bn3.bias', 'encoder_radar.fc.weight', 'encoder_radar.layer3.4.bn1.bias', 'encoder_radar.layer3.17.bn1.weight', 'encoder_radar.layer1.2.bn1.num_batches_tracked', 'encoder_radar.layer3.11.bn1.weight', 'encoder_radar.layer3.6.bn3.bias', 'encoder_radar.l
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Epoch 1/100:   0%|                                                                                                                                                                   | 0/94 [00:00<?, ?it/s]
encoder output is none
pixel values is not none
Traceback (most recent call last):
  File "/home/yunkwan/project/radarclip/Radarcap_main_cl.py", line 534, in <module>
    main(args.train_3, args.epochs, args.batch_size, args.test_mode)
  File "/home/yunkwan/project/radarclip/Radarcap_main_cl.py", line 521, in main
    train_model(encoder_search_resnet1D_3, train_loader, val_loader, criterion, optimizer,warmup_scheduler,cosine_scheduler, prepro_image_fn= prepro_image_features_768,num_epochs=num_epochs,filter = LearnableLogFilter_3)
  File "/home/yunkwan/project/radarclip/Radarcap_main_cl.py", line 273, in train_model
    radars_features = model(radars).reshape(-1,50,768)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yunkwan/project/radarclip/smallcap/src/vision_encoder_decoder.py", line 573, in forward
    encoder_outputs = self.encoder(
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 771, in forward
    hidden_states = self.embeddings(pixel_values)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/transformers/models/clip/modeling_clip.py", line 133, in forward
    patch_embeds = self.patch_embedding(pixel_values)  # shape = [*, width, grid, grid]
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1532, in _wrapped_call_impl
    return self._call_impl(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/module.py", line 1541, in _call_impl
    return forward_call(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 460, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/nn/modules/conv.py", line 456, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: Given groups=1, weight of size [768, 3, 32, 32], expected input[1, 256, 1, 400] to have 3 channels, but got 256 channels instead
