Some weights of SmallCap were not initialized from the model checkpoint at Yova/SmallCap7M and are newly initialized: ['encoder_radar.layer3.8.bn3.running_var', 'encoder_radar.layer3.0.bn2.running_var', 'encoder_radar.layer3.0.bn3.running_var', 'encoder_radar.layer3.15.bn2.num_batches_tracked', 'encoder_radar.layer3.20.bn1.running_mean', 'encoder_radar.layer3.5.conv1.weight', 'encoder_radar.layer2.2.bn3.num_batches_tracked', 'encoder_radar.layer3.22.bn1.bias', 'encoder_radar.layer1.0.downsample.1.running_mean', 'encoder_radar.layer3.3.bn2.weight', 'encoder_radar.layer3.22.bn1.num_batches_tracked', 'encoder_radar.layer4.0.bn3.running_mean', 'encoder_radar.layer4.1.conv3.weight', 'encoder_radar.layer2.0.downsample.1.bias', 'encoder_radar.layer3.18.bn1.num_batches_tracked', 'encoder_radar.layer3.19.bn3.running_var', 'encoder_radar.fc.weight', 'encoder_radar.layer3.10.bn2.num_batches_tracked', 'encoder_radar.layer1.2.bn3.num_batches_tracked', 'encoder_radar.layer3.18.bn1.running_var', 'encoder_radar.layer3.5.conv2.weight', 'encoder_radar.layer3.21.bn1.running_var', 'encoder_radar.layer3.7.bn1.weight', 'encoder_radar.layer3.7.bn3.running_mean', 'encoder_radar.layer3.8.bn2.running_mean', 'encoder_radar.layer3.21.conv1.weight', 'encoder_radar.layer3.11.conv2.weight', 'encoder_radar.layer3.13.bn3.weight', 'encoder_radar.layer3.4.conv3.weight', 'encoder_radar.layer1.2.conv1.weight', 'encoder_radar.layer3.19.bn2.running_mean', 'encoder_radar.layer3.22.bn3.running_mean', 'encoder_radar.layer1.0.downsample.1.weight', 'encoder_radar.layer3.5.bn1.running_var', 'encoder_radar.layer3.5.bn1.weight', 'encoder_radar.layer3.5.bn2.running_var', 'encoder_radar.layer3.5.bn2.bias', 'encoder_radar.layer3.2.bn2.bias', 'encoder_radar.layer3.4.bn1.bias', 'encoder_radar.layer2.3.bn2.weight', 'encoder_radar.layer3.4.bn1.running_var', 'encoder_radar.layer2.2.bn3.bias', 'encoder_radar.layer4.2.conv1.weight', 'encoder_radar.layer3.0.bn3.running_mean', 'encoder_radar.layer3.21.bn1.num_batches_tracked', 'encoder_radar.layer1.2.bn1.weight', 'encoder_radar.layer2.3.bn1.running_mean', 'encoder_radar.layer3.13.bn2.running_var', 'encoder_radar.layer3.6.bn1.bias', 'encoder_radar.layer3.15.conv3.weight', 'encoder_radar.layer3.19.conv2.weight', 'encoder_radar.layer4.0.bn2.num_batches_tracked', 'encoder_radar.layer2.3.bn3.running_mean', 'encoder_radar.layer3.5.bn3.running_mean', 'encoder_radar.layer3.7.bn2.num_batches_tracked', 'encoder_radar.layer4.0.downsample.1.running_mean', 'encoder_radar.layer2.0.conv2.weight', 'encoder_radar.layer3.17.bn1.num_batches_tracked', 'encoder_radar.layer3.11.bn3.running_var', 'encoder_radar.layer3.14.bn3.weight', 'encoder_radar.layer3.18.bn1.weight', 'encoder_radar.layer3.20.bn3.num_batches_tracked', 'encoder_radar.layer3.3.bn3.running_var', 'encoder_radar.layer3.7.bn1.num_batches_tracked', 'encoder_radar.layer3.14.bn1.running_mean', 'encoder_radar.layer3.9.bn2.weight', 'encoder_radar.layer3.19.conv3.weight', 'encoder_radar.layer1.2.bn3.running_mean', 'encoder_radar.layer3.12.bn1.running_mean', 'encoder_radar.layer3.12.conv1.weight', 'encoder_radar.layer2.3.bn3.num_batches_tracked', 'encoder_radar.layer4.2.bn2.running_mean', 'encoder_radar.layer3.5.bn2.running_mean', 'encoder_radar.layer3.18.bn3.running_mean', 'encoder_radar.layer4.2.bn3.running_var', 'encoder_radar.layer3.4.bn3.weight', 'encoder_radar.layer2.1.bn1.num_batches_tracked', 'encoder_radar.layer2.0.bn3.running_var', 'encoder_radar.layer3.0.conv1.weight', 'encoder_radar.layer3.19.bn3.bias', 'encoder_radar.layer3.13.bn1.running_mean', 'encoder_radar.layer3.19.bn2.running_var', 'encoder_radar.layer3.11.bn1.bias', 'encoder_radar.layer3.11.bn3.running_mean', 'encoder_radar.layer2.2.bn2.running_var', 'encoder_radar.layer3.22.bn2.bias', 'encoder_radar.layer3.6.bn2.running_var', 'encoder_radar.layer3.13.bn2.bias', 'encoder_radar.layer1.0.bn2.bias', 'encoder_radar.layer2.0.downsample.1.running_var', 'encoder_radar.layer3.2.bn1.running_var', 'encoder_radar.layer2.0.bn2.bias', 'encoder_radar.layer3.18.conv1.weight', 'encoder_radar.layer3.5.bn1.num_batches_tracked', 'encoder_radar
You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.
Epoch 1/10: 100%|███████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 47/47 [01:28<00:00,  1.89s/it, loss=0.272]
Epoch 1/10, Train Loss: 0.2724, Train_acc: 0.8592, Val Loss: 0.2982 , Val_acc: 0.9838
Epoch 2/10: 100%|█████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████████| 47/47 [01:24<00:00,  1.79s/it, loss=2.85e-6]
Epoch 2/10, Train Loss: 0.0000, Train_acc: 1.0000, Val Loss: 0.0942 , Val_acc: 0.9920
Epoch 3/10:  15%|███████████████████████▌                                                                                                                                      | 7/47 [00:14<01:22,  2.05s/it, loss=6.44e-7]
Traceback (most recent call last):
  File "/home/yunkwan/project/radarclip/Radarcap_main_cl.py", line 549, in <module>
    main(args.train_3, args.epochs, args.batch_size, args.test_mode)
  File "/home/yunkwan/project/radarclip/Radarcap_main_cl.py", line 534, in main
    train_model(encoder_search_resnet1D_3, train_loader, val_loader, criterion, optimizer,warmup_scheduler,cosine_scheduler, prepro_image_fn= prepro_image_features_768,num_epochs=num_epochs,filter = LearnableLogFilter_3)
  File "/home/yunkwan/project/radarclip/Radarcap_main_cl.py", line 295, in train_model
    optimizer.step()
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/optim/lr_scheduler.py", line 75, in wrapper
    return wrapped(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/optim/optimizer.py", line 391, in wrapper
    out = func(*args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/optim/optimizer.py", line 76, in _use_grad
    ret = func(self, *args, **kwargs)
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/optim/adamw.py", line 188, in step
    adamw(
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/optim/adamw.py", line 340, in adamw
    func(
  File "/home/yunkwan/anaconda3/envs/smallcap/lib/python3.9/site-packages/torch/optim/adamw.py", line 613, in _multi_tensor_adamw
    torch._foreach_addcdiv_(device_params, device_exp_avgs, exp_avg_sq_sqrt, step_size)
KeyboardInterrupt
